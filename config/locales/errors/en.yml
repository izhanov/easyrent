en:
  dry_validation:
    errors:
      or: "or"
      array?: "must be an array"

      empty?: "must be empty"

      excludes?: "must not include %{value}"

      excluded_from?:
        arg:
          default: "must not be one of: %{list}"
          range: "must not be one of: %{list_left} - %{list_right}"
      exclusion?: "must not be one of: %{list}"

      eql?: "must be equal to %{left}"

      not_eql?: "must not be equal to %{left}"

      filled?: "is missing"

      format?: "is in invalid format"

      number?: "must be a number"

      odd?: "must be odd"

      even?: "must be even"

      gt?: "must be greater than %{num}"

      gteq?: "must be greater than or equal to %{num}"

      hash?: "must be a hash"

      included_in?:
        arg:
          default: "must be one of: %{list}"
          range: "must be one of: %{list_left} - %{list_right}"
      inclusion?: "must be one of: %{list}"

      includes?: "must include %{value}"

      bool?: "must be boolean"

      true?: "must be true"

      false?: "must be false"

      int?: "must be an integer"

      float?: "must be a float"

      decimal?: "must be a decimal"

      date?: "must be a date"

      date_time?: "must be a date time"

      time?: "must be a time"

      key?: "is missing"

      attr?: "is missing"

      lt?: "must be less than %{num}"

      lteq?: "must be less than or equal to %{num}"

      max_size?: "size cannot be greater than %{num} symbols"

      min_size?: "size cannot be less than %{num} symbols"

      none?: "cannot be defined"

      str?: "must be a string"

      type?: "must be %{type}"

      slug?: "must contain only a-z, 0-9 and -"

      phone?: "must be in correct format"

      coordinates?: "Coordinates must be in correct format"

      email?: "must include @"

      rules:
        slug:
          invalid_format: "must contain only a-z, and -"
        phone:
          invalid_format: "must be in correct format"
        contact_phone:
          invalid_format: "must be in correct format"
        service_phone:
          invalid_format: "must be in correct format"
        price_range:
          price_range_cell:
            from_greater_than_to: "from cannot be greater than to"
            from_and_to_equal: "from and to cannot be equal"
            total_days_greater_than_30: "total days cannot be greater than 30"
            from_equal_last_to: "from cannot be equal to last to"
            from_already_exist: "from value already exist in range"
            from_less_than_last_to: "from cannot be less than last to"
        mileage_limit:
          only_markup_or_discount: "only markup or discount can be set"

        bank_account_number:
          invalid_format: "must be in correct format"
        city:
          title:
            uniqueness_violation: "must be unique"
        brand:
          title:
            uniqueness_violation: "must be unique"
        mark:
          title:
            uniqueness_violation: "must be unique"
        offer:
          prices:
            empty_prices: "must be present"
        client:
          identification_or_phone_number:
            uniqueness_violation: "must be unique"
        starts_at:
          in_the_past: "cannot be in the past"
        ends_at:
          in_the_past: "cannot be in the past"
          less_than_starts_at: "cannot be less than starts at"
        password_confirmation:
          not_equal: "must be equal to password"
        car_park:
          uniqueness_violation: "identificaiton number and bookings prefix must be unique"
        booking:
          status:
            invalid: "Invalid status"
        pledge_amount:
          less_than_zero: "must be greater than or equal to 0"
        car:
          plate_number_or_vin_code:
            uniqueness_violation: "must be unique"
        insurances_attributes:
          start_at:
            greater_than_end_at: "Start at cannot be greater than end at"
      size?:
        arg:
          default: "size must be %{size}"
          range: "size must be within %{size_left} - %{size_right}"

        value:
          string:
            arg:
              default: "length must be %{size}"
              range: "length must be within %{size_left} - %{size_right}"
